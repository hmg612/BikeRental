/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import member.model.MemberDAO;
import member.model.MemberDTO;

/**
 *
 * @author HONG
 */
public class MemberInfo extends javax.swing.JFrame implements ActionListener, ItemListener{

    public static final int USER_REGISTER = 1;    // 회원가입
    public static final int USER_MODIFY = 2;        // 회원정보수정
    private int userCase;
    private LoginPage loginPage;
    private String[] emailList = {"naver.com","daum.net","nate.com","gmail.com","직접입력"};
    private MemberDAO memberDao;
    private boolean isDuplicated;
    
    /**
     * Creates new form MemberInfo
     */
    public MemberInfo() {
        initComponents();
        init();
        addEvent();
    }

    public MemberInfo(int userCase) {
        this();
        
        this.userCase = userCase;
        memberProc();
    }
    
    public MemberInfo(int memberFlag, LoginPage loginPage) {
        this(memberFlag);
        this.loginPage = loginPage;
    }

    public boolean getIsDuplicated() {
        return isDuplicated;
    }

    public void setIsDuplicated(boolean isDuplicated) {
        this.isDuplicated = isDuplicated;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tfUserid = new javax.swing.JTextField();
        btDup = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfPwd = new javax.swing.JTextField();
        tfEmail1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbEmail2 = new javax.swing.JComboBox<>();
        tfEmail3 = new javax.swing.JTextField();
        cbPhone1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        tfPhone2 = new javax.swing.JTextField();
        tfPhone3 = new javax.swing.JTextField();
        tfWeight = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btRegister = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();
        btWhy = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("아이디");

        tfUserid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfUseridActionPerformed(evt);
            }
        });

        btDup.setText("중복확인");

        jLabel2.setText("비밀번호");

        jLabel3.setText("이메일");

        jLabel4.setText("전화번호");

        jLabel5.setText("체중");

        jLabel6.setText("@");

        cbEmail2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbPhone1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "010", "011", "016", "017", "018", "019", " " }));

        jLabel7.setText("-");

        jLabel9.setText("kg");

        btRegister.setText("회원가입");

        btCancel.setText("취소");

        btWhy.setText("?");

        jLabel10.setText("-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfUserid, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(tfPwd))
                        .addGap(32, 32, 32)
                        .addComponent(btDup)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tfWeight, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(cbPhone1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 10, Short.MAX_VALUE))
                                    .addComponent(tfEmail1, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbEmail2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(tfEmail3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(tfPhone2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfPhone3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btWhy))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(btRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfUserid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btDup))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(cbEmail2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfEmail3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbPhone1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(tfPhone2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPhone3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(btWhy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btRegister)
                    .addComponent(btCancel))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfUseridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfUseridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfUseridActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MemberInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MemberInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MemberInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MemberInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MemberInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btDup;
    private javax.swing.JButton btRegister;
    private javax.swing.JButton btWhy;
    private javax.swing.JComboBox<String> cbEmail2;
    private javax.swing.JComboBox<String> cbPhone1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField tfEmail1;
    private javax.swing.JTextField tfEmail3;
    private javax.swing.JTextField tfPhone2;
    private javax.swing.JTextField tfPhone3;
    private javax.swing.JTextField tfPwd;
    public javax.swing.JTextField tfUserid;
    private javax.swing.JTextField tfWeight;
    // End of variables declaration//GEN-END:variables

    
    private void init() {
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);     //해당 창만 닫히도록(부모 창은 그대로)
        
        DefaultComboBoxModel<String> cModel = new DefaultComboBoxModel<>(emailList);
        cbEmail2.setModel(cModel);        
        tfEmail3.setEnabled(false);
        
        memberDao = new MemberDAO();
    }

    
    private void addEvent() {
        cbEmail2.addItemListener(this);
        btRegister.addActionListener(this);
        btDup.addActionListener(this);
        btCancel.addActionListener(this);
        btWhy.addActionListener(this);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource() == btRegister) {
            try {
                register();
            } catch (SQLException ex) {
                Logger.getLogger(MemberInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if(e.getSource() == btDup) {
            // CheckId f = new CheckId(this, tfUserid.getText());
            // f.setVisible(true);
            try {
                duplicateId();
            } catch (SQLException ex) {
                Logger.getLogger(MemberInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if(e.getSource() == btCancel) {
            dispose();
        } else if(e.getSource() == btWhy) {
            JOptionPane.showMessageDialog(this, "체중 입력 시 칼로리계산이 가능합니다^^");
        }
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        if(e.getSource() == cbEmail2) {
            if(e.getStateChange() == ItemEvent.SELECTED) {
                System.out.println("1. 선택된 항목 : " + e.getItem());
                System.out.println("2. 선택된 항목 : " + cbEmail2.getSelectedItem() 
                        + ", index = " + cbEmail2.getSelectedIndex());
                
                if(e.getItem().equals("직접입력")) {
                    tfEmail3.setEnabled(true);
                    tfEmail3.requestFocus();
                } else {
                    tfEmail3.setEnabled(false);
                    tfEmail3.setText("");
                }
            }
        }
    }

    private void memberProc() {
        //회원가입, 회원수정에 따라 화면 처리하기
        if(userCase == USER_REGISTER) {
            setTitle("회원가입");
            btRegister.setText("회원가입");
        } else if(userCase == USER_MODIFY) {
            setTitle("회원 정보 수정");
            btRegister.setText("회원정보수정");
            setEditing();
        }
    }

    private void setEditing() {
        tfUserid.setEnabled(false);
        btDup.setEnabled(false);
    }

    private void register() throws SQLException {
        String userid = tfUserid.getText();
        String pwd = tfPwd.getText();
        String email1 = tfEmail1.getText();
        String email2 = (String) cbEmail2.getSelectedItem();
        String email3 = tfEmail3.getText();
        String mobile1 = (String) cbPhone1.getSelectedItem();
        String mobile2 = tfPhone2.getText();
        String mobile3 = tfPhone3.getText();
        String weight = null;
        if(!tfWeight.getText().equals("")){
           weight = tfWeight.getText();
        } else{
            weight = "0";
        }
        
        if(userid == null || userid.isEmpty()) {
            JOptionPane.showMessageDialog(this, "아이디를 입력하세요");
            tfUserid.requestFocus();
            return;
        }
        
        if(pwd == null || pwd.isEmpty()) {
            JOptionPane.showMessageDialog(this, "비밀번호를 입력하세요");
            tfPwd.requestFocus();
            return;
        }
        if(!isDuplicated) {
            JOptionPane.showMessageDialog(this, "아이디 중복확인을 하세요");
            btDup.requestFocus();
            return;
        }
        
        String email = "", mobile = "";
        
        if(mobile2 != null && !mobile2.isEmpty() && mobile3 != null && !mobile3.isEmpty()) {
            mobile = mobile1 + "-" + mobile2 + "-" + mobile3;
        }
        
        if(email1 != null && !email1.isEmpty()) {
            if(email2.equals("직접입력")) {
                if(email3 != null && !email3.isEmpty()) {
                    email = email1 + "@" + email3;                    
                }
            } else {
                email = email1 + "@" + email2;
            }
        }
        
        MemberDTO dto = new MemberDTO();
        dto.setUserid(userid);
        dto.setPwd(pwd);
        dto.setEmail(email);
        dto.setMobile(mobile);        
        dto.setWeight(Float.parseFloat(weight));
        
        
        int cnt = memberDao.insertMember(dto);
        
        String result = "";
        if(cnt>0) {
            result = "회원가입이 완료되었습니다.";
            this.dispose();     // 회원가입 창 닫기
            loginPage.tfUserid.setText(userid);          //로그인화면의 id칸에 회원가입한 아이디를 보여주기
        } else {
            result = "회원가입 실패!";
        }
        JOptionPane.showMessageDialog(this, result);
    }
    
    
    private void duplicateId() throws SQLException {
        //1
        String userid = tfUserid.getText();
        if(userid == null || userid.isEmpty()) {
            JOptionPane.showMessageDialog(this, "아이디를 입력하세요");
            tfUserid.requestFocus();
            return;
        }
        
        //2
        int result = memberDao.duplicateUserid(userid);
        
        //3
        if(result == MemberDAO.UNUSABLE_ID) {
            JOptionPane.showMessageDialog(this, userid + "는 이미 존재하는 아이디입니다.");
            tfUserid.setText("");
            tfUserid.requestFocus();
            
        } else if(result == MemberDAO.USABLE_ID) {
            JOptionPane.showMessageDialog(this, userid + "는 사용 가능한 아이디입니다.");
            setIsDuplicated(true);
        } else {
            JOptionPane.showMessageDialog(this, "아이디 중복확인 실패!");
        }
    }
}
